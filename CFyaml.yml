--- 
Resources: 
  BreweryInstance:
    Type: AWS::EC2::Instance
    Properties:
      InstanceType: t2.micro
      ImageId: ami-0022f774911c1d690
      KeyName: ECSKey
      SecurityGroups:
        - !Ref MySecurityGroup
      Tags:
        - Key: Name
          Value: BreweryApp
      UserData: !Base64 |
        #!/bin/bash
        # Install Docker
        sudo yum update -y
        sudo yum install docker -y
        sudo service docker start
        sudo usermod -a -G docker ec2-user
        # Install docker-compose
        sudo curl -L https://github.com/docker/compose/releases/latest/download/docker-compose-$(uname -s)-$(uname -m) -o /usr/local/bin/docker-compose
        sudo chmod +x /usr/local/bin/docker-compose
        # Create docker-composse file
        echo "
        version: '3.8'
        services:
          db:
            container_name: postgresql_db
            image: postgres:14.1-alpine
            restart: always
            ports:
              - "5432:5432"
            environment:
              - POSTGRES_USER: cdxpreinbalvbw
              - POSTGRES_PASSWORD: 8b794319be9f1d93f7067a2544843ef4a466b4f9e1c0461f13185d43be2f9550
            networks:
              - customer-ec2-network
          BreweryApp:
            container_name: brewery
            image: 871867462990.dkr.ecr.us-east-1.amazonaws.com/brewery:latest
            restart: on-failure
            ports:
              - "8080:8080"
            networks:
              - customer-ec2-network
        networks:
          customer-ec2-network:
        " > docker-compose.yaml
        # Run docker-composse
        sudo /usr/local/bin/docker-compose up -d
  MySecurityGroup:
    Type: AWS::EC2:SecurityGroup
    Properties:
      GroupDescription: For the app node that allows ssh, HTTP, and docker ports.
      SecurityGroupIngress:
        - CiDrip: 0.0.0.0/0
          FromPort: "8080"
          IpProtocol: tcp
          ToPort: "8080"
        - CiDrip: 0.0.0.0/0
          FromPort: "22"
          IpProtocol: ssh
          ToPort: "22"
    